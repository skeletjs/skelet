const getRootClass = require('skelet-utils/lib/getRootClass')

function freezeFunction (instance, fn) {
  if (!(fn instanceof Object)) throw new TypeError('instance must be an object')
  if (typeof fn !== 'function') throw new TypeError('fn must be a function')

  // Check wither a subclass is attempting to override this function
  if (instance[fn.name]) {
    throw new Error(`You are not allowed to override ${getRootClass(instance).constructor.name}.${fn.name}`)
  }

  // Install the function as a unconfigurable getter
  Object.defineProperty(instance, fn.name, {
    get: function () { return fn },
    set: () => { throw new Error(`You are not allowed to modify ${instance.constructor.name}.${fn.name}`) },
    configurable: false
  })
}

module.exports = freezeFunction
